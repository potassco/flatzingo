#------------------------------------------------------------------------------#
# This file contains the setup for the flatzingo submission to the MiniZinc
# challenge. It uses two stages. In the first stage, it builds/compiles
# flatzingo in the same OS as the MiniZinc Challenge docker image. The second 
# stage extends the provided MiniZinc Challenge docker image by copying the
# flatzingo executable and its MiniZinc library across from the first stage as
# well as installing missing libraries for running flatzingo if necessary. 
# Note that you do not have to use multi stages. Everything can be done in a 
# one stage build. However, Note that the statements ADD, RUN, and COPY can 
# add image layers, which can increase the size of the layer you have to 
# upload.
#------------------------------------------------------------------------------#
# 1. Stage: Compilation of flatzingo in a Build Stage

# Using the same image as for the MiniZinc Challenge
FROM ubuntu:18.04 AS builder
ENV PATH="/install/bin:${PATH}"
ARG PATH="/install/bin:${PATH}"

# Updating & installing necessary packages
RUN apt-get update -y && apt-get install -y \
    build-essential \
    git \
    curl 

RUN curl https://sh.rustup.rs | bash -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
# bad idea to use meow and also to use update ?
RUN git clone https://github.com/potassco/fzn2lp.git && \
    cd fzn2lp && \
    cargo build --release && \
    mkdir -p /install/bin && \
    cp target/release/fzn2lp /install/bin/

RUN git clone https://github.com/potassco/flatzingo.git

#------------------------------------------------------------------------------#
# 2. Stage: Setup of flatzingo in the MiniZinc Challenge docker image
#
# Using the MiniZinc Challenge docker image
FROM minizinc/mznc2020

ENV PATH="/install/bin:${PATH}"

# Installing python for wrapper script
RUN apt-get update -y && apt-get install software-properties-common -y && \
    add-apt-repository ppa:deadsnakes/ppa && \
    add-apt-repository ppa:potassco/bionic-wip && \
    apt-get install -y python3.8 clingcon

# Copy clingcon's executable from the previous stage across
COPY --from=builder /install /install

# Copy flatzingo's executable from the previous stage across
COPY --from=builder /flatzingo/*.lp /entry_data/
COPY --from=builder /flatzingo/fzn-flatzingo.py /entry_data/
COPY --from=builder /flatzingo/fzn-flatzingo.sh /entry_data/fzn-exec
RUN chmod a+x /entry_data/fzn-exec

# Copy flatzingo's MiniZinc library from the previous stage across
COPY --from=builder /flatzingo/share/minizinc/flatzingo/* /entry_data/mzn-lib/

